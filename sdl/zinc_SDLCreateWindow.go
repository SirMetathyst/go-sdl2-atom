// Package sdl ...
// Generated by the zinc tool.  DO NOT EDIT!
// Source: zinc_SDLCreateWindow
package sdl

import (
	"github.com/SirMetathyst/zinc"

)

// SDLCreateWindowKey ...
const SDLCreateWindowKey uint = 1702836466

// SDLCreateWindowData ...
type SDLCreateWindowData struct {
	Title string	
}

// SDLCreateWindowComponent ...
type SDLCreateWindowComponent struct {
	ctx zinc.CTX
	data map[zinc.EntityID]SDLCreateWindowData
}

// NewSDLCreateWindowComponent ...
func NewSDLCreateWindowComponent() *SDLCreateWindowComponent {
	return &SDLCreateWindowComponent{
		data: make(map[zinc.EntityID]SDLCreateWindowData),
	}
}

// SetContext ...
func (c *SDLCreateWindowComponent) SetContext(ctx zinc.CTX) {
	if c.ctx == nil {
		c.ctx = ctx
	}
}

func init() {
	x := NewSDLCreateWindowComponent()
	ctx := zinc.Default().RegisterComponent(SDLCreateWindowKey, x)
	x.SetContext(ctx)
}

// DeleteEntity ...
func (c *SDLCreateWindowComponent) DeleteEntity(id zinc.EntityID) {
	delete(c.data, id)
}

// HasEntity ...
func (c *SDLCreateWindowComponent) HasEntity(id zinc.EntityID) bool {
	_, ok := c.data[id]
	return ok
}

// SetSDLCreateWindow ...
func (c *SDLCreateWindowComponent) SetSDLCreateWindow(id zinc.EntityID, sdlcreatewindow SDLCreateWindowData) {
	if c.ctx.HasEntity(id) {
		if c.HasEntity(id) {
			c.data[id] = sdlcreatewindow
			c.ctx.ComponentUpdated(SDLCreateWindowKey, id)
		} else {
			c.data[id] = sdlcreatewindow
			c.ctx.ComponentAdded(SDLCreateWindowKey, id)
		}
	}
}

// SDLCreateWindow ...
func (c *SDLCreateWindowComponent) SDLCreateWindow(id zinc.EntityID) SDLCreateWindowData {
	return c.data[id]
}

// DeleteSDLCreateWindow ...
func (c *SDLCreateWindowComponent) DeleteSDLCreateWindow(id zinc.EntityID) {
	delete(c.data, id)
	c.ctx.ComponentDeleted(SDLCreateWindowKey, id)
}

// SetSDLCreateWindowX ...
func SetSDLCreateWindowX(e *zinc.EntityManager, id zinc.EntityID, sdlcreatewindow SDLCreateWindowData) {
	v, _ := e.Component(SDLCreateWindowKey)
	c := v.(*SDLCreateWindowComponent)
	c.SetSDLCreateWindow(id, sdlcreatewindow)
}

// SetSDLCreateWindow ...
func SetSDLCreateWindow(id zinc.EntityID, sdlcreatewindow SDLCreateWindowData) {
	SetSDLCreateWindowX(zinc.Default(), id, sdlcreatewindow)
}

// SDLCreateWindowX ...
func SDLCreateWindowX(e *zinc.EntityManager, id zinc.EntityID) SDLCreateWindowData {
	v, _ := e.Component(SDLCreateWindowKey)
	c := v.(*SDLCreateWindowComponent)
	return c.SDLCreateWindow(id)
}

// SDLCreateWindow ...
func SDLCreateWindow(id zinc.EntityID) SDLCreateWindowData {
	return SDLCreateWindowX(zinc.Default(), id)
}

// DeleteSDLCreateWindowX ...
func DeleteSDLCreateWindowX(e *zinc.EntityManager, id zinc.EntityID) {
	v, _ := e.Component(SDLCreateWindowKey)
	c := v.(*SDLCreateWindowComponent)
	c.DeleteSDLCreateWindow(id)
}

// DeleteSDLCreateWindow ...
func DeleteSDLCreateWindow(id zinc.EntityID) {
	DeleteSDLCreateWindowX(zinc.Default(), id)
}

// HasSDLCreateWindowX ...
func HasSDLCreateWindowX(e *zinc.EntityManager, id zinc.EntityID) bool {
	v, _ := e.Component(SDLCreateWindowKey)
	return v.HasEntity(id)
}

// HasSDLCreateWindow ...
func HasSDLCreateWindow(id zinc.EntityID) bool {
	return HasSDLCreateWindowX(zinc.Default(), id)
}